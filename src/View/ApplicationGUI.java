/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

/**
 *
 * @author LAPR3_20152016_G27
 */
public class ApplicationGUI extends javax.swing.JFrame {

    
    /**
     * Creates new form MainFrame
     */
    public ApplicationGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        project = new javax.swing.JMenu();
        openProject = new javax.swing.JMenuItem();
        createProject = new javax.swing.JMenuItem();
        copyProject = new javax.swing.JMenuItem();
        editProject = new javax.swing.JMenuItem();
        addVehicle = new javax.swing.JMenuItem();
        analysis = new javax.swing.JMenu();
        bestPath = new javax.swing.JMenuItem();
        fastestPath = new javax.swing.JMenuItem();
        mostEfficientPath = new javax.swing.JMenuItem();
        vehicleComparison = new javax.swing.JMenuItem();
        simulation = new javax.swing.JMenu();
        createSimulation = new javax.swing.JMenu();
        newSimulation = new javax.swing.JMenuItem();
        copySimulation = new javax.swing.JMenuItem();
        editSimulation = new javax.swing.JMenuItem();
        deleteSimulation = new javax.swing.JMenuItem();
        runSimulation = new javax.swing.JMenuItem();
        results = new javax.swing.JMenu();
        globalResults = new javax.swing.JMenu();
        resultsSummary = new javax.swing.JMenuItem();
        resultsExport = new javax.swing.JMenuItem();
        filterResults = new javax.swing.JMenuItem();
        gnuplot = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        project.setText("Project");

        openProject.setText("Open");
        openProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openProjectMouseClicked(evt);
            }
        });
        project.add(openProject);

        createProject.setText("Create");
        createProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createProjectActionPerformed(evt);
            }
        });
        project.add(createProject);

        copyProject.setText("Copy");
        copyProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyProjectActionPerformed(evt);
            }
        });
        project.add(copyProject);

        editProject.setText("Edit");
        editProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProjectActionPerformed(evt);
            }
        });
        project.add(editProject);

        addVehicle.setText("Add Vehicle");
        addVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVehicleActionPerformed(evt);
            }
        });
        project.add(addVehicle);

        jMenuBar1.add(project);

        analysis.setText("Analysis");

        bestPath.setText("Best Path");
        bestPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bestPathActionPerformed(evt);
            }
        });
        analysis.add(bestPath);

        fastestPath.setText("Fastest Path");
        fastestPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastestPathActionPerformed(evt);
            }
        });
        analysis.add(fastestPath);

        mostEfficientPath.setText("Most Efficient Path");
        mostEfficientPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostEfficientPathActionPerformed(evt);
            }
        });
        analysis.add(mostEfficientPath);

        vehicleComparison.setText("Vehicle Comparison");
        vehicleComparison.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleComparisonActionPerformed(evt);
            }
        });
        analysis.add(vehicleComparison);

        jMenuBar1.add(analysis);

        simulation.setText("Simulation");

        createSimulation.setText("Create");

        newSimulation.setText("From Scratch");
        createSimulation.add(newSimulation);

        copySimulation.setText("Copy");
        createSimulation.add(copySimulation);

        simulation.add(createSimulation);

        editSimulation.setText("Edit");
        simulation.add(editSimulation);

        deleteSimulation.setText("Delete");
        simulation.add(deleteSimulation);

        runSimulation.setText("Run");
        simulation.add(runSimulation);

        jMenuBar1.add(simulation);

        results.setText("Results");

        globalResults.setText("Global");

        resultsSummary.setText("Show summary");
        globalResults.add(resultsSummary);

        resultsExport.setText("Export to HTML");
        globalResults.add(resultsExport);

        results.add(globalResults);

        filterResults.setText("Filter");
        results.add(filterResults);

        gnuplot.setText("Gnuplot File");
        results.add(gnuplot);

        jMenuBar1.add(results);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openProjectMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_openProjectMouseClicked

    private void createProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createProjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createProjectActionPerformed

    private void copyProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyProjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copyProjectActionPerformed

    private void editProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editProjectActionPerformed

    private void addVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVehicleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addVehicleActionPerformed

    private void bestPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bestPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bestPathActionPerformed

    private void fastestPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastestPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fastestPathActionPerformed

    private void mostEfficientPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostEfficientPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mostEfficientPathActionPerformed

    private void vehicleComparisonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleComparisonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vehicleComparisonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ApplicationGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addVehicle;
    private javax.swing.JMenu analysis;
    private javax.swing.JMenuItem bestPath;
    private javax.swing.JMenuItem copyProject;
    private javax.swing.JMenuItem copySimulation;
    private javax.swing.JMenuItem createProject;
    private javax.swing.JMenu createSimulation;
    private javax.swing.JMenuItem deleteSimulation;
    private javax.swing.JMenuItem editProject;
    private javax.swing.JMenuItem editSimulation;
    private javax.swing.JMenuItem fastestPath;
    private javax.swing.JMenuItem filterResults;
    private javax.swing.JMenu globalResults;
    private javax.swing.JMenuItem gnuplot;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem mostEfficientPath;
    private javax.swing.JMenuItem newSimulation;
    private javax.swing.JMenuItem openProject;
    private javax.swing.JMenu project;
    private javax.swing.JMenu results;
    private javax.swing.JMenuItem resultsExport;
    private javax.swing.JMenuItem resultsSummary;
    private javax.swing.JMenuItem runSimulation;
    private javax.swing.JMenu simulation;
    private javax.swing.JMenuItem vehicleComparison;
    // End of variables declaration//GEN-END:variables
}
